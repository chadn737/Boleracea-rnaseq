makeResultsTable <- function(x,conditionA,conditionB,lfcThreshold=0,filter=FALSE){
require(DESeq2)
bml <- sapply(levels(dds$condition),function(lvl) rowMeans(counts(dds,normalized=TRUE)[,dds$condition == lvl]))
bml <- as.data.frame(bml)
y <- results(x,contrast=c("condition",conditionA,conditionB),lfcThreshold=lfcThreshold,independentFiltering=filter)
y <- data.frame(id=gsub(pattern = "gene:",replacement = "",row.names(y)),
sampleA=c(conditionA),sampleB=c(conditionB),
baseMeanA=bml[,conditionA],baseMeanB=bml[,conditionB],
log2FC=y$log2FoldChange,pval=y$pvalue,padj=y$padj)
row.names(y) <- c(1:nrow(y))
return(y)
}
#Function for making a heat map of samples
sampleHeatMap <- function(x){
require(pheatmap)
require("RColorBrewer")
sampleDists <- dist(t(assay(x)))
sampleDistMatrix <- as.matrix(sampleDists)
rownames(sampleDistMatrix) <- colnames(x)
colnames(sampleDistMatrix) <- NULL
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors)
}
#Function for making a PCA plot of samples
pcaPlot <- function(x){
require(ggplot2)
d <- plotPCA(x, intgroup=c("condition"), returnData=TRUE)
pv <- round(100 * attr(d, "percentVar"))
ggplot(d, aes(PC1, PC2, color=condition)) +
geom_point(size=3) +
xlab(paste0("PC1: ",pv[1],"% variance")) +
ylab(paste0("PC2: ",pv[2],"% variance")) +
coord_fixed() +
theme(panel.background=element_blank(),
axis.line=element_line(color="black"),
axis.text=element_text(color="black"),
axis.title=element_text(color="black",face="bold"))
}
#Function for making dot plots of Enriched GO terms
GOdotplot <- function(x,cutoff=0.05){
require(ggplot2)
ggplot(x[x$fdr < cutoff,],aes(x=Significant/Annotated,y=reorder(Term,Significant/Annotated))) +
geom_point(aes(color=fdr,size=Significant)) +
theme_bw() +
scale_color_continuous(low="red",high="blue") +
xlab("Gene Ratio (DEGs/Annotated Genes)") +
ylab("") +
labs(size="Gene Count",color="FDR")
}
#Function for making combined dotplots of GOterms
GOdotplot2 <- function(x){
ggplot(x) +
geom_point(aes(x=c("CvT"),y=Term,size=CvT_sig,color=CvT_FDR)) +
geom_point(aes(x=c("KvT"),y=Term,size=KvT_sig,color=KvT_FDR)) +
geom_point(aes(x=c("KvC"),y=Term,size=KvC_sig,color=KvC_FDR)) +
scale_color_continuous(low="red",high="blue",na.value="grey50") +
theme_bw() +
ylab("") +
xlab("Sample Comparisons") +
labs(size="Gene Count",color="FDR")
}
#Function for running topGO on a list of genes
topGO <- function(genelist,goTerms,nodeSize,filename,writeData=FALSE){
require(topGO)
require(GO.db)
path <- c("goTerms/")
ifelse(!dir.exists(path),dir.create(path), FALSE)
BP <- new("topGOdata",description="Biological Process",ontology="BP",
allGenes=genelist,annot=annFUN.gene2GO,nodeSize=nodeSize,gene2GO=goTerms)
MF <- new("topGOdata",description="Molecular Function",ontology="MF",
allGenes=genelist,annot=annFUN.gene2GO,nodeSize=nodeSize,gene2GO=goTerms)
CC <- new("topGOdata",description="Cellular Compartment",ontology="CC",
allGenes=genelist,annot=annFUN.gene2GO,nodeSize=nodeSize,gene2GO=goTerms)
FisherBP <- runTest(BP,algorithm="parentchild",statistic="fisher")
FisherMF <- runTest(MF,algorithm="parentchild",statistic="fisher")
FisherCC <- runTest(CC,algorithm="parentchild",statistic="fisher")
BPgenTable <- GenTable(BP,Fisher=FisherBP,ranksOf="Fisher",topNodes=length(score(FisherBP)))
MFgenTable <- GenTable(MF,Fisher=FisherMF,ranksOf="Fisher",topNodes=length(score(FisherMF)))
CCgenTable <- GenTable(CC,Fisher=FisherCC,ranksOf="Fisher",topNodes=length(score(FisherCC)))
BPgenTable$fdr <- p.adjust(BPgenTable$Fisher,method="BH")
MFgenTable$fdr <- p.adjust(MFgenTable$Fisher,method="BH")
CCgenTable$fdr <- p.adjust(CCgenTable$Fisher,method="BH")
write.csv(BPgenTable,paste(path,filename,"_BP.csv",sep=""),row.names=FALSE,quote=FALSE)
ggsave(paste(path,filename,"_BP.pdf"),plot=GOdotplot(as.data.frame(BPgenTable)))
write.csv(MFgenTable,paste(path,filename,"_MF.csv",sep=""),row.names=FALSE,quote=FALSE)
ggsave(paste(path,filename,"_MF.pdf"),plot=GOdotplot(MFgenTable))
write.csv(CCgenTable,paste(path,filename,"_CC.csv",sep=""),row.names=FALSE,quote=FALSE)
ggsave(paste(path,filename,"_CC.pdf"),plot=GOdotplot(CCgenTable))
if(writeData){
return(list(BP=BPgenTable,MF=MFgenTable,CC=CCgenTable))
}
}
#Function for making a heat map of genes
geneHeatMap <- function(dds,geneList){
require(pheatmap)
select <- select <- row.names(counts(dds,normalized=TRUE)) %in% genelist
nt <- normTransform(dds) # defaults to log2(x+1)
log2.norm.counts <- assay(nt)[select,]
COL <- as.data.frame(colData(dds)[,c("condition")])
pheatmap(log2.norm.counts, cluster_rows=TRUE, show_rownames=TRUE,
cluster_cols=FALSE, annotation_col=df)
}
#DESeq2
#Run initial DESeq2 analysis
#Load Deseq2
library(DESeq2)
#Read in sample metadata
sampleTable <- read.csv("../misc/sample_metadata.csv",header=T)
#Read in Counts Table
dds <- DESeqDataSetFromHTSeqCount(sampleTable,design= ~ condition)
#Set reference level
dds$condition <- relevel(dds$condition, ref="TO1000")
#Estimate Size Factors
dds <- estimateSizeFactors(dds)
#Estimate Dispersions
dds <- estimateDispersions(dds,fitType="parametric")
#Run Wald Test
dds <- nbinomWaldTest(dds)
#Make diagnostic figures of samples
#Make a heat map of samples
rld <- rlog(dds, blind=TRUE)
pdf("sampleHeatMap.pdf",width=6,height=6,paper='special')
sampleHeatMap(rld)
dev.off()
#Make a PCA plot of samples
pdf("samplePCA.pdf",width=6,height=6,paper='special')
pcaPlot(rld)
dev.off()
#Make results tables for each pairwise comparison
resKvT <- makeResultsTable(dds,"kale","TO1000",lfcThreshold=0.5,filter=T)
resKvC <- makeResultsTable(dds,"kale","cabbage",lfcThreshold=0.5,filter=T)
resCvT <- makeResultsTable(dds,"cabbage","TO1000",lfcThreshold=0.5,filter=T)
#Combine results tables
resfull <- as.data.frame(rbind(resKvT,resKvC,resCvT))
#Adjust p-values for all results
resfull$padj <- p.adjust(resfull$pval,method="BH")
#Make results tables for each pairwise comparison
resKvT <- makeResultsTable(dds,"kale","TO1000",lfcThreshold=0,filter=F)
resKvC <- makeResultsTable(dds,"kale","cabbage",lfcThreshold=0,filter=F)
resCvT <- makeResultsTable(dds,"cabbage","TO1000",lfcThreshold=0,filter=F)
#Combine results tables
resfull <- as.data.frame(rbind(resKvT,resKvC,resCvT))
#Adjust p-values for all results
resfull$padj <- p.adjust(resfull$pval,method="BH")
#Extract and output a table of normalized counts
normalizedCounts <- counts(dds, normalized=TRUE)
all_genes <- data.frame(gene=row.names(normalizedCounts), normalizedCounts[,c(3,4,5,1,2,6,7,8)],
as.data.frame(sapply(levels(dds$condition),
function(lvl) rowMeans(counts(dds,normalized=TRUE)[,dds$condition == lvl]))),
resfull[resfull$sampleA=="kale" & resfull$sampleB=="TO1000",c(6,8)],
resfull[resfull$sampleA=="kale" & resfull$sampleB=="cabbage",c(6,8)],
resfull[resfull$sampleA=="cabbage" & resfull$sampleB=="TO1000",c(6,8)])
colnames(all_genes) <- c("gene","kale1", "kale2", "kale3", "cabbage1", "cabbage2",
"TO10001", "TO10002", "TO10003", "kale_mean",
"cabbage_mean", "TO1000_mean", "KvT_log2FC", "KvT_padj",
"KvC_log2FC", "KvC_padj", "CvT_log2FC", "CvT_padj" )
write.table(all_genes, "Gene_expression_table.tsv",sep="\t",
quote=FALSE, row.names=FALSE)
#Extract significant DEGs
sig <- na.omit(resfull[resfull$padj <= 0.05 & resfull$log2FC >= 1 | resfull$padj <= 0.05 & resfull$log2FC <= -1,])
#Count number of DEGs for each comparison
table(sig$sampleA,sig$sampleB)
#For each pairwise comparison, extract the DEGs
CvTsig <- sig[sig$sampleA == "cabbage" & sig$sampleB == "TO1000",]
KvTsig <- sig[sig$sampleA == "kale" & sig$sampleB == "TO1000",]
KvCsig <- sig[sig$sampleA == "kale" & sig$sampleB == "cabbage",]
#Venn Diagram of DEGs
#Make a table of overlap between pairwise comparisons
d2 <- data.frame(id=unique(sig$id))
d2 <- data.frame(id=d2$id,KvT=ifelse(d2$id %in% sig[sig$sampleA == "kale" & sig$sampleB == "TO1000",]$id, 1, 0),
KvC=ifelse(d2$id %in% sig[sig$sampleA == "kale" & sig$sampleB == "cabbage",]$id, 1, 0),
CvT=ifelse(d2$id %in% sig[sig$sampleA == "cabbage" & sig$sampleB == "TO1000",]$id, 1, 0)
)
#Make Venn Diagram
library(VennDiagram)
pdf("comparisonVennDiagram.pdf",width=6,height=6,paper='special')
draw.triple.venn(area1=nrow(subset(d2,CvT==1)),
area2=nrow(subset(d2,KvT==1)),
area3=nrow(subset(d2,KvC==1)),
n12=nrow(subset(d2,CvT==1 & KvT==1)),
n23=nrow(subset(d2,KvT==1 & KvC==1)),
n13=nrow(subset(d2,CvT==1 & KvC==1)),
n123=nrow(subset(d2,CvT==1 & KvT==1 & KvC==1)),
category = c("Cabbage v TO1000", "Kale v TO100", "Kale v Cabbage"),
lty = "blank",
fill = c("skyblue", "pink1", "mediumorchid")
)
dev.off()
head(sig)
head(syn)
strsplit(syn$LF,split = ";")
LF <- syn$LF
LF
strsplit(as.character(LF),';',fixed=T)
do.call('rbind', strsplit(as.character(df$FOO),'|',fixed=TRUE))
do.call('rbind', strsplit(as.character(LF),';',fixed=TRUE))
strsplit(as.character(LF),';',fixed=T)
do.call('rbind', strsplit(as.character(LF),';',fixed=TRUE))
LF <- do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE))
lF
LF
length(LF)
nrow(syn)
LF <- grep(//Bo//,do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE)))
LF <- grep(\\bBo\\b,do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE)))
LF <- grep("\\bBo\\b",do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE)))
LF
LF <- grep("\\bBo\\b",as.vector(do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE))))
LF <- do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE))
LF
LF <- grep("\\bBo\\b",as.vector(do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE))))
LF
LF <- do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE))
grep("\\bBo\\b",LF)
grep("\\b Bo \\b",LF)
grep("\\Bo\\",LF)
grep("Bo",LF)
sig$id %in% LF
table(sig$id %in% LF)
LF <- do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE))
MF1 <- do.call('rbind', strsplit(as.character(syn$MF1),';',fixed=TRUE))
MF2 <- do.call('rbind', strsplit(as.character(syn$MF2),';',fixed=TRUE))
table(sig$id %in% LF)
table(sig$id %in% MF1)
table(sig$id %in% MF2)
syn <- read.table("../misc/At-Brassica_Syntelogs.txt",header=T,sep="\t")
LF <- syn$LF
LF <- do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE))
MF1 <- do.call('rbind', strsplit(as.character(syn$MF1),';',fixed=TRUE))
MF2 <- do.call('rbind', strsplit(as.character(syn$MF2),';',fixed=TRUE))
table(sig$id %in% LF)
table(sig$id %in% MF1)
table(sig$id %in% MF2)
head(syn)
syn <- read.table("../misc/At-Brassica_Syntelogs.txt",header=T,sep="\t")
LF <- syn$LF
LF <- do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE))
MF1 <- do.call('rbind', strsplit(as.character(syn$MF1),';',fixed=TRUE))
MF2 <- do.call('rbind', strsplit(as.character(syn$MF2),';',fixed=TRUE))
table(sig$id %in% LF)
table(sig$id %in% MF1)
table(sig$id %in% MF2)
#KEGG analysis
library(clusterProfiler)
xx <- enrichMKEGG(KvTsig$id, organism='boe', minGSSize=1)
head(syn)
table(sig$id %in% LF)
table(sig$id %in% MF1)
table(sig$id %in% MF2)
LF
LF!='-'
do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE))
do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE))!="-"
LF
LF[LF!="-"]
LF <- do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE))
LF[LF!="-"]
MF1 <- do.call('rbind', strsplit(as.character(syn$MF1),';',fixed=TRUE))
MF1[MF1!="-"]
MF2 <- do.call('rbind', strsplit(as.character(syn$MF2),';',fixed=TRUE))
MF2[MF2!="-"]
table(sig$id %in% LF)
table(sig$id %in% MF1)
table(sig$id %in% MF2)
table(LF %in$ sig$id)
table(MF1 %in$ sig$id)
table(MF2 %in$ sig$id)
table(LF %in% sig$id)
table(MF1 %in% sig$id)
table(MF2 %in% sig$id)
length(LF)
LF <- do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE))
length(LF)
LF
strsplit(as.character(syn$LF),';',fixed=TRUE)
LF <- as.list(strsplit(as.character(syn$LF),';',fixed=TRUE))
LF
table(LF %in% sig$id)
LF <- as.list(strsplit(as.character(syn$LF),';',fixed=TRUE))
LF[LF!="-"]
MF1 <- as.list(strsplit(as.character(syn$MF1),';',fixed=TRUE))
MF1[MF1!="-"]
MF2 <- as.list(strsplit(as.character(syn$MF2),';',fixed=TRUE))
MF2[MF2!="-"]
table(LF %in% sig$id)
table(MF1 %in% sig$id)
table(MF2 %in% sig$id)
length(LF)
lengthMF1
length(MF1)
length(MF2)
LF <- as.character(strsplit(as.character(syn$LF),';',fixed=TRUE))
LF
LF <- do.call('rbind', strsplit(as.character(syn$LF),';',fixed=TRUE))
LF
nrow(LF)
MF1 <- do.call('rbind', strsplit(as.character(syn$MF1),';',fixed=TRUE))
MF1[MF1!="-"]
MF2 <- do.call('rbind', strsplit(as.character(syn$MF2),';',fixed=TRUE))
MF2[MF2!="-"]
MF1
MF2
LF <- do.call('rbind', strsplit(as.list(syn$LF),';',fixed=TRUE))
LF[LF!="-"]
LF
LF
syn <- read.table("../misc/Bo_At_syntelogs.tsv",header=T,sep="\t")
table(syn[syn$subgenome=='LF',] %in% sig$id)
table(syn[syn$subgenome=='MF1',] %in% sig$id)
table(syn[syn$subgenome=='MF2',] %in% sig$id)
head(syn)
syn[syn$subgenome=='LF',]
table(syn[syn$subgenome=='LF',]$Bo_gene %in% sig$id)
table(syn[syn$subgenome=='MF1',]$Bo_gene %in% sig$id)
table(syn[syn$subgenome=='MF2',]$Bo_gene %in% sig$id)
nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF2',])
2813/10763
2074/7420
1675/6338
nrow(syn[syn$subgenome=='LF',]$Bo_gene %in% sig$id)
nrow(syn[syn$subgenome=='MF1',]$Bo_gene %in% sig$id)
nrow(syn[syn$subgenome=='MF2',]$Bo_gene %in% sig$id)
nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig$id,])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig$id,])/nrow(syn[syn$subgenome=='MF2',])
ls()
upSig
ls
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$log2FC>0,]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$log2FC<0,]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$log2FC>0,]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$log2FC<0,]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$log2FC>0,]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$log2FC<0,]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$log2FC>0,]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$log2FC<0,]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$log2FC>0,]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$log2FC<0,]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$log2FC>0,]$id,])/nrow(syn[syn$subgenome=='MF2',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$log2FC<0,]$id,])/nrow(syn[syn$subgenome=='MF2',])
nrow(sig[sig$id !%in% syn$Bo_gene])
nrow(sig[sig$id !%in% syn$Bo_gene,])
nrow(sig[sig$id %!in% syn$Bo_gene,])
nr
nrow(sig[!(sig$id ! %in% syn$Bo_gene),])
nrow(sig[(sig$id %in% syn$Bo_gene),])
nrow(sig[!(sig$id %in% syn$Bo_gene),])
nrow(sig)
sig
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig$id,])/nrow(syn[syn$subgenome=='LF',])
head(sig)
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sampleA=="kale" & sampleB=="TO1000"]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000"]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]id,])/nrow(syn[syn$subgenome=='MF2',])
n
n
n
n
n
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]id,])/nrow(syn[syn$subgenome=='MF2',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]id,])/nrow(syn[syn$subgenome=='MF2',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]id,])/nrow(syn[syn$subgenome=='MF2',])
n
n
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]id,])/nrow(syn[syn$subgenome=='MF2',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF2',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]$id,])/nrow(syn[syn$subgenome=='MF2',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF2',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$log2FC>0,]$id & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$log2FC>0 & sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id)/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$log2FC>0 & sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$log2FC>0 & sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id)/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$log2FC>0 & sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$log2FC<0 & sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$log2FC>0 & sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$log2FC<0 & sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$log2FC>0 & sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF2',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$log2FC<0 & sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF2',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$log2FC>0 & sig$sampleA=="kale" & sig$sampleB=="cabbage",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$log2FC<0 & sig$sampleA=="kale" & sig$sampleB=="cabbage",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$log2FC>0 & sig$sampleA=="kale" & sig$sampleB=="cabbage",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$log2FC<0 & sig$sampleA=="kale" & sig$sampleB=="cabbage",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$log2FC>0 & sig$sampleA=="kale" & sig$sampleB=="cabbage",]$id,])/nrow(syn[syn$subgenome=='MF2',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$log2FC<0 & sig$sampleA=="kale" & sig$sampleB=="cabbage",]$id,])/nrow(syn[syn$subgenome=='MF2',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$log2FC>0 & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$log2FC<0 & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$log2FC>0 & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$log2FC<0 & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF1',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$log2FC>0 & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF2',])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$log2FC<0 & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='MF2',])
nrow(sig[!(sig$id %in% syn$Bo_gene),])
nrow(sig[!(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn$Bo_gene),])
nrow(sig[!(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn$Bo_gene),])
nrow(sig[!(sig$id %in% syn$Bo_gene),])
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="TO1000",])
ls()
head(all_genes)
nrow(all_genes)
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/nrow(syn$Bo_gene %in% all_genes$gene)
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/length(syn$Bo_gene %in% all_genes$gene)
length(syn$Bo_gene %in% all_genes$gene)
length(!(syn$Bo_gene %in% all_genes$gene))
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/length(syn$Bo_gene %in% all_genes$gene)
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/(nrow(all_genes)-length(syn$Bo_gene %in% all_genes$gene))
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/length(syn$Bo_gene %in% all_genes$gene)
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/(nrow(all_genes)-length(syn$Bo_gene %in% all_genes$gene))
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="cabbage",])
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="cabbage",])
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="cabbage",])/length(syn$Bo_gene %in% all_genes$gene)
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="cabbage",])/(nrow(all_genes)-length(syn$Bo_gene %in% all_genes$gene))
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])/length(syn$Bo_gene %in% all_genes$gene)
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])/(nrow(all_genes)-length(syn$Bo_gene %in% all_genes$gene))
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/length(syn$Bo_gene)
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="cabbage",])
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="cabbage",])
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="cabbage",])/length(syn$Bo_gene %in% all_genes$gene)
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="cabbage",])/(nrow(all_genes)-length(syn$Bo_gene %in% all_genes$gene))
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="cabbage",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",])
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="cabbage",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",])
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])/length(syn$Bo_gene %in% all_genes$gene)
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])/(nrow(all_genes)-length(syn$Bo_gene %in% all_genes$gene))
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(syn[syn$subgenome=='LF',])
nrow(syn[syn$subgenome=='LF' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(syn[syn$subgenome=='MF1' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(syn[syn$subgenome=='MF2' & syn$Bo_gene %in% sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]))
nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,] %in% syn[syn$subgenome=='LF' & syn$Bo_gene)/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",] %in% syn[syn$subgenome=='LF' & syn$Bo_gene),]$id,]/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",] %in% syn[syn$subgenome=='MF1' & syn$Bo_gene),]$id,]/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",] %in% syn[syn$subgenome=='MF2' & syn$Bo_gene),]$id,]/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",] %in% syn[syn$subgenome=='LF' & syn$Bo_gene),]$id,]/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,] %in% syn[syn$subgenome=='LF']$Bo_gene,])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,] %in% syn[syn$subgenome=='MF1']$Bo_gene,])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id,] %in% syn[syn$subgenome=='MF2']$Bo_gene,])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='LF']$Bo_gene,])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF1']$Bo_gene,])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='LF']$Bo_gene,])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
sig[sig$sampleA=="kale" & sig$sampleB=="TO1000"
,]
nrow(sig[sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='LF',]$Bo_gene,])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF1',]$Bo_gene,])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF2',]$Bo_gene,])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='LF',]$Bo_gene,])
nrow(sig[sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF1',]$Bo_gene,])
nrow(sig[sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF2',]$Bo_gene,])
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])
sig[sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='LF',]$Bo_gene,]
table(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='LF',]$Bo_gene)
sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='LF',]$Bo_gene
table(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF1',]$Bo_gene)
table(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='LF',]$Bo_gene)
sig[sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF1',]$Bo_gene,]
nrow(sig[sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF1',]$Bo_gene,])
nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(yn[syn$subgenome=='MF1',]$Bo_gene,])
nrow(syn[syn$subgenome=='MF1',]$Bo_gene,])
nrow(syn[syn$subgenome=='MF1',]$Bo_gene)
nrow(syn[syn$subgenome=='MF1',])
length(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF1',]$Bo_gene)/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
length(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF1',]$Bo_gene)
table(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF1',]$Bo_gene)
table(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF1',]$Bo_gene)
table(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF1',]$Bo_gene)[2]
table(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF1',]$Bo_gene)[2]/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
table(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='LF',]$Bo_gene)[2]/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
table(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF1',]$Bo_gene)[2]/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
table(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]$id %in% syn[syn$subgenome=='MF2',]$Bo_gene)[2]/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/length(syn$Bo_gene %in% all_genes$gene)
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/(nrow(all_genes)-length(syn$Bo_gene %in% all_genes$gene))
