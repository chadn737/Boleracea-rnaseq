#Estimate Size Factors
dds <- estimateSizeFactors(dds)
#Estimate Dispersions
dds <- estimateDispersions(dds,fitType="parametric")
#Run Wald Test
dds <- nbinomWaldTest(dds)
#Make diagnostic figures of samples
#Make a heat map of samples
rld <- rlog(dds, blind=TRUE)
pdf("sampleHeatMap.pdf",width=6,height=6,paper='special')
sampleHeatMap(rld)
dev.off()
#Make a PCA plot of samples
pdf("samplePCA.pdf",width=6,height=6,paper='special')
pcaPlot(rld)
dev.off()
#Make results tables for each pairwise comparison
resKvT <- makeResultsTable(dds,"kale","TO1000",filter=FALSE)
resKvC <- makeResultsTable(dds,"kale","cabbage",filter=FALSE)
resCvT <- makeResultsTable(dds,"cabbage","TO1000",filter=FALSE)
#Combine results tables
resfull <- as.data.frame(rbind(resKvT,resKvC,resCvT))
#Adjust p-values for all results
resfull$padj <- p.adjust(resfull$pval,method="BH")
#Extract and output a table of normalized counts
normalizedCounts <- counts(dds, normalized=TRUE)
all_genes <- data.frame(gene=row.names(normalizedCounts), normalizedCounts[,c(3,4,5,1,2,6,7,8)],
as.data.frame(sapply(levels(dds$condition),
function(lvl) rowMeans(counts(dds,normalized=TRUE)[,dds$condition == lvl]))),
resfull[resfull$sampleA=="kale" & resfull$sampleB=="TO1000",c(6,8)],
resfull[resfull$sampleA=="kale" & resfull$sampleB=="cabbage",c(6,8)],
resfull[resfull$sampleA=="cabbage" & resfull$sampleB=="TO1000",c(6,8)])
colnames(all_genes) <- c("gene","kale1", "kale2", "kale3", "cabbage1", "cabbage2",
"TO10001", "TO10002", "TO10003", "kale_mean",
"cabbage_mean", "TO1000_mean", "KvT_log2FC", "KvT_padj",
"KvC_log2FC", "KvC_padj", "CvT_log2FC", "CvT_padj" )
write.table(all_genes, "Gene_expression_table.tsv",sep="\t",
quote=FALSE, row.names=FALSE)
#Extract significant DEGs
sig <- na.omit(resfull[resfull$padj <= 0.05 & resfull$log2FC >= 1 | resfull$padj <= 0.05 & resfull$log2FC <= -1,])
#Count number of DEGs for each comparison
table(sig$sampleA,sig$sampleB)
#For each pairwise comparison, extract the DEGs
CvTsig <- sig[sig$sampleA == "cabbage" & sig$sampleB == "TO1000",]
KvTsig <- sig[sig$sampleA == "kale" & sig$sampleB == "TO1000",]
KvCsig <- sig[sig$sampleA == "kale" & sig$sampleB == "cabbage",]
#Venn Diagram of DEGs
#Make a table of overlap between pairwise comparisons
d2 <- data.frame(id=unique(sig$id))
d2 <- data.frame(id=d2$id,KvT=ifelse(d2$id %in% sig[sig$sampleA == "kale" & sig$sampleB == "TO1000",]$id, 1, 0),
KvC=ifelse(d2$id %in% sig[sig$sampleA == "kale" & sig$sampleB == "cabbage",]$id, 1, 0),
CvT=ifelse(d2$id %in% sig[sig$sampleA == "cabbage" & sig$sampleB == "TO1000",]$id, 1, 0)
)
#Make Venn Diagram
library(VennDiagram)
pdf("comparisonVennDiagram.pdf",width=6,height=6,paper='special')
draw.triple.venn(area1=nrow(subset(d2,CvT==1)),
area2=nrow(subset(d2,KvT==1)),
area3=nrow(subset(d2,KvC==1)),
n12=nrow(subset(d2,CvT==1 & KvT==1)),
n23=nrow(subset(d2,KvT==1 & KvC==1)),
n13=nrow(subset(d2,CvT==1 & KvC==1)),
n123=nrow(subset(d2,CvT==1 & KvT==1 & KvC==1)),
category = c("Cabbage v TO1000", "Kale v TO100", "Kale v Cabbage"),
lty = "blank",
fill = c("skyblue", "pink1", "mediumorchid")
)
dev.off()
##GO term enrichment
library(topGO)
library(GO.db)
goTerms <- readMappings(file="../misc/topGO.txt")
CvTgotermUP <- factor(as.integer(resCvT$id %in% CvTsig[CvTsig$log2FC > 1,]$id))
names(CvTgotermUP) <- resCvT$id
CvTgotermUP <- topGO(CvTgotermUP,goTerms,nodeSize=5,"CvT_up",writeData=TRUE)
CvTgotermDOWN <- factor(as.integer(resCvT$id %in% CvTsig[CvTsig$log2FC < -1,]$id))
names(CvTgotermDOWN) <- resCvT$id
CvTgotermDOWN <- topGO(CvTgotermDOWN,goTerms,nodeSize=5,"CvT_down",writeData=TRUE)
#Read in sample metadata
sampleTable <- read.csv("../misc/sample_metadata.csv",header=T)
#Read in Counts Table
dds <- DESeqDataSetFromHTSeqCount(sampleTable,design= ~ condition)
#Prefilter
dds <- dds[rowSums(counts(dds)) > 1,]
#Set reference level
dds$condition <- relevel(dds$condition, ref="TO1000")
#Estimate Size Factors
dds <- estimateSizeFactors(dds)
#Estimate Dispersions
dds <- estimateDispersions(dds,fitType="parametric")
#Run Wald Test
dds <- nbinomWaldTest(dds)
#Make diagnostic figures of samples
#Make a heat map of samples
rld <- rlog(dds, blind=TRUE)
pdf("sampleHeatMap.pdf",width=6,height=6,paper='special')
sampleHeatMap(rld)
dev.off()
#Make a PCA plot of samples
pdf("samplePCA.pdf",width=6,height=6,paper='special')
pcaPlot(rld)
dev.off()
#Make results tables for each pairwise comparison
resKvT <- makeResultsTable(dds,"kale","TO1000",filter=FALSE)
resKvC <- makeResultsTable(dds,"kale","cabbage",filter=FALSE)
resCvT <- makeResultsTable(dds,"cabbage","TO1000",filter=FALSE)
#Combine results tables
resfull <- as.data.frame(rbind(resKvT,resKvC,resCvT))
#Adjust p-values for all results
resfull$padj <- p.adjust(resfull$pval,method="BH")
#Extract and output a table of normalized counts
normalizedCounts <- counts(dds, normalized=TRUE)
all_genes <- data.frame(gene=row.names(normalizedCounts), normalizedCounts[,c(3,4,5,1,2,6,7,8)],
as.data.frame(sapply(levels(dds$condition),
function(lvl) rowMeans(counts(dds,normalized=TRUE)[,dds$condition == lvl]))),
resfull[resfull$sampleA=="kale" & resfull$sampleB=="TO1000",c(6,8)],
resfull[resfull$sampleA=="kale" & resfull$sampleB=="cabbage",c(6,8)],
resfull[resfull$sampleA=="cabbage" & resfull$sampleB=="TO1000",c(6,8)])
colnames(all_genes) <- c("gene","kale1", "kale2", "kale3", "cabbage1", "cabbage2",
"TO10001", "TO10002", "TO10003", "kale_mean",
"cabbage_mean", "TO1000_mean", "KvT_log2FC", "KvT_padj",
"KvC_log2FC", "KvC_padj", "CvT_log2FC", "CvT_padj" )
write.table(all_genes, "Gene_expression_table.tsv",sep="\t",
quote=FALSE, row.names=FALSE)
1.5e+8
1.5^8
1.5^e+8
1.5e-8
1.5e+8
data.frame(Region=("Genic","2000bp Upstream","2000bp Downstream","Distal >2kb", "Distal >10kb"),Number=(14122,19402,12717,8650,14386))
data.frame(Region=c("Genic","2000bp Upstream","2000bp Downstream","Distal >2kb", "Distal >10kb"),Number=c(14122,19402,12717,8650,14386))
df1<-data.frame(Region=c("Genic","2000bp Upstream","2000bp Downstream","Distal >2kb", "Distal >10kb"),Number=c(14122,19402,12717,8650,14386))
sum(df1$Number)
df1<-data.frame(Region=c("Genic","2000bp Upstream","2000bp Downstream","Distal >2kb", "Distal >10kb"),Number=c(5013,19402,12717,8650,14386))
sum(df1$Number)
df1$Percentage<-df1$Number/60168
df1
library(ggplot2)
ggplot(df1)+geom_bar(aes(y=Percentage,x=Region))
ggplot(df1)+geom_bar(aes(y=Percentage,x=Region),stat="identity")
ggplot(df1)+geom_bar(aes(y=Percentage,x=Region),stat="identity")+geom_bw()
ggplot(df1)+geom_bar(aes(y=Percentage,x=Region),stat="identity")+theme_bw()
ggplot(df1)+geom_bar(aes(y=Percentage,x=Region,color=Region),stat="identity")+theme_bw()
ggplot(df1)+geom_bar(aes(y=Percentage,x=Region,fill=Region),stat="identity")+theme_bw()
ggplot(df1)+geom_bar(aes(y=Percentage,x=Region,fill=Region),stat="identity")+theme_bw()+scaly_y_continuous(labels=percent)
library(scales)
ggplot(df1)+geom_bar(aes(y=Percentage,x=Region,fill=Region),stat="identity")+theme_bw()+scaly_y_continuous(labels=percent)
ggplot(df1)+geom_bar(aes(y=Percentage,x=Region,fill=Region),stat="identity")+theme_bw()+scale_y_continuous(labels=percent)
df1$order<-c(1,2,3,4,5)
ggplot(df1)+geom_bar(aes(y=Percentage,x=reorder(Region,order),fill=Region),stat="identity")+theme_bw()+scale_y_continuous(labels=percent)
ggplot(df1)+geom_bar(aes(y=Percentage,x=reorder(Region,order),fill=Region),stat="identity")+theme_bw()+scale_y_continuous(labels=percent)+xlab("")
ggplot(df1)+geom_bar(aes(y=Percentage,x=reorder(Region,order),fill=Region),stat="identity")+theme_bw(axis.text.x=element_text(angle=90))+scale_y_continuous(labels=percent)+xlab("")
ggplot(df1)+geom_bar(aes(y=Percentage,x=reorder(Region,order),fill=Region),stat="identity")+theme_bw()+thee(axis.text.x=element_text(angle=90))+scale_y_continuous(labels=percent)+xlab("")
ggplot(df1)+geom_bar(aes(y=Percentage,x=reorder(Region,order),fill=Region),stat="identity")+theme_bw()+theme(axis.text.x=element_text(angle=90))+scale_y_continuous(labels=percent)+xlab("")
ggplot(df1)+geom_bar(aes(y=Percentage,x=reorder(Region,order),fill=Region),stat="identity")+theme_bw()+theme(axis.text.x=element_text(angle=90,hjust=1))+scale_y_continuous(labels=percent)+xlab("")
ggplot(df1)+geom_bar(aes(y=Percentage,x=reorder(Region,order),fill=Region),stat="identity")+theme_bw()+scale_y_continuous(labels=percent)+xlab("")
df1
0.08331671+0.08331671+0.08331671
0.08331671+0.32246377+0.32246377
0.08331671+0.32246377+0.21135820
7 × 10−9
7xe-9
7e-9
7e-9*150,000,000
7e-9*150000000
7e-9*200000000
devtools::install_github("jinyizju/V.PhyloMaker")
install.packages("devtools")
devtools::install_github("jinyizju/V.PhyloMaker")
library(V.PhyloMaker)
BiocManager::install("ggtree")
test <- phylo.maker()
test <- phylo.maker(sp.list = c('Brassica oleracea','Brassica rapa'))
test <- phylo.maker(sp.list = ('Brassica oleracea','Brassica rapa'))
test <- phylo.maker(sp.list = c('Brassica oleracea','Brassica rapa'))
species <- data.frame(species=c('Brassica oleracea','Brassica rapa'))
species
test <- phylo.maker(sp.list = species
)
species <- data.frame(species=c('Brassica oleracea','Brassica rapa'),genus,family,species.relative,genus.relative)
species <- data.frame(species=c('Brassica oleracea','Brassica rapa'),genus=c(),family=c(),species.relative=c(),genus.relative=c())
species <- data.frame(species=c('Brassica oleracea','Brassica rapa'),genus=c('',''),family=c('',''),species.relative=c('',''),genus.relative=c('',''))
sspecies
species
test <- phylo.maker(sp.list = species)
test
ggtree(test)
library(ggtree)
ggtree(test)
ggtree(test$scenario.3)
library(ape)
test$scenario.3
species <- data.frame(species=c('Brassica oleracea','Brassica rapa','Arabidopsis thaliana'),genus=c('',''),family=c('',''),species.relative=c('',''),genus.relative=c('',''))
species <- data.frame(species=c('Brassica oleracea','Brassica rapa','Arabidopsis thaliana'),genus=c('','',''),family=c('','',''),species.relative=c('','',''),genus.relative=c('','',''))
test <- phylo.maker(sp.list = species)
test
test$scenario.3
ggtree(test$scenario.3)
ggtree(test$scenario.3)
ggtree(test$scenario.3) + geom_tiplab()
ggtree(test$scenario.3) + geom_tiplab(size=3)
ggtree(test$scenario.3) + geom_tiplab(size=10)
ggtree(test$scenario.3) + geom_tiplab(size=5)
species <- data.frame(species=c('Brassica oleracea','Brassica rapa','Arabidopsis thaliana'),genus=c('','',''),family=c('','','')
)
test <- phylo.maker(sp.list = species)
ggtree(test$scenario.3) + geom_tiplab(size=5)
species <- data.frame(species=c('Brassica oleracea','Brassica rapa','Brassica nigra','Arabidopsis thaliana'),genus=c('Brassica','Brassica','Brassica','Arabidopsis'),family=c('','','',''))
test <- phylo.maker(sp.list = species)
ggtree(test$scenario.3) + geom_tiplab(size=5)
test$scenario.3
nodes.info.1
species <- data.frame(species=c('Brassica oleracea','Brassica rapa','Brassica nigra','Arabidopsis thaliana','Capsella rubella','Brassica napus'),genus=c('Brassica','Brassica','Brassica','Arabidopsis','Capsella','Brassica'),family=c('','','','','',''))
test <- phylo.maker(sp.list = species)
ggtree(test$scenario.3) + geom_tiplab(size=5)
plot.phylo(test$scenario.3)
species <- data.frame(species=c('Brassica oleracea','Brassica rapa','Brassica nigra','Arabidopsis thaliana','Capsella rubella','Brassica napus','Raphanus raphanistrum'),genus=c('Brassica','Brassica','Brassica','Arabidopsis','Capsella','Brassica','Raphanus'),family=c('','','','','','',''))
ggtree(test$scenario.3) + geom_tiplab(size=5)
test <- phylo.maker(sp.list = species)
plot.phylo(test$scenario.3)
plot.phylo(test$scenario.3)
setwd("Analysis/Boleracea-rnaseq/")
setwd("figures_tables/")
load("~/Analysis/Boleracea-rnaseq/figures_tables/Analysis.RData")
goi2 <- read.csv('../misc/genes_of_interest2.csv')
head(goi2)
head(geneEx)
head(resfull)
geneEx[geneEx$Gene %in% goi2[goi2$Class=='Development',]$ID,]
x
x <- geneEx[geneEx$Gene %in% goi2[goi2$Class=='i',]$ID,]
x
x <- geneEx[geneEx$Gene %in% goi2[goi2$Class=='Development',]$ID,]
x
x1 <- melt(x)
library(reshape2)
x1 <- melt(x)
h1
x1
x1 <- melt(x[1:8])
x1
x1 <- melt(x[1:9])
x1
x1$variable <- gsub()
x1$variable <- gsub('_.','',x1$variable)
x1
ggplot(x1) + geomboxplot(aes(x=ID,y=value,group=value),position='dodge')
library(ggplot2)
ggplot(x1) + geomboxplot(aes(x=ID,y=value,group=value),position='dodge')
ggplot(x1) + geom_boxplot(aes(x=ID,y=value,group=value),position='dodge')
head(x1)
ggplot(x1) + geom_boxplot(aes(x=Gene,y=value,group=value),position='dodge')
ggplot(x1) + geom_boxplot(aes(x=Gene,y=value,group=variable),position='dodge')
ggplot(x1) + geom_boxplot(aes(x=Gene,y=value,fill='variable'),position='dodge')
ggplot(x1) + geom_boxplot(aes(x=Gene,y=value,fill=variable),position='dodge')
p <- ggplot(x1,aes(x=Gene,y=value,fill=variable))
p + geom_bar(position="dodge")
p + geom_bar(stat='identity,position="dodge")
p + geom_bar(stat='identity',position="dodge")
p + geom_bar(stat='bin',position="dodge")
p + geom_col(stat='bin',position="dodge")
p + geom_col(,position="dodge")
x1$value <- x1$value + 0.00000000000000000001
x1
x1$value <- log2(x1$value)
p <- ggplot(x1,aes(x=Gene,y=value,fill=variable))
p + geom_col(position="dodge")
x1 <- melt(x[1:9])
x1$variable <- gsub('_.','',x1$variable)
log2(x1$value)
ifelse(x1$value=='-Inf','0',x1$value)
x1$value <- ifelse(x1$value=='-Inf','0',x1$value)
p <- ggplot(x1,aes(x=Gene,y=value,fill=variable))
p
p + geom_col(position="dodge")
x1 <- melt(x[1:9])
x1$variable <- gsub('_.','',x1$variable)
x1$value <- log10(x1$value)
x1$value <- ifelse(x1$value=='-Inf','0',x1$value)
p <- ggplot(x1,aes(x=Gene,y=value,fill=variable))
p + geom_col(position="dodge")
x1$variable <- gsub('_.','',x1$variable)
x1$value <- log2(x1$value)
x1$value <- ifelse(x1$value=='-Inf','0',x1$value)
p <- ggplot(x1,aes(x=Gene,y=value,fill=variable))
x1 <- melt(x[1:9])
x1$variable <- gsub('_.','',x1$variable)
x1$value <- log2(x1$value)
x1$value <- ifelse(x1$value=='-Inf','0',x1$value)
p <- ggplot(x1,aes(x=Gene,y=value,fill=variable))
p + geom_col(position="dodge")
p + geom_col(position="dodge") + scale_y_continuous(expand=c(0,0),limits=c(0,max(x1$value+0.2)))
p + geom_col(position="dodge") + scale_y_continuous(expand=c(0,0),limits=c(0,max(x1$value)+0.2)))
max(x1$value)
p + geom_col(position="dodge") + scale_y_continuous(expand=c(0,0),limits=c(0,max(x1$value)+0.2))
p + geom_col(position="dodge") + scale_y_continuous(expand=c(0,0),limits=c(0,(max(x1$value)+0.2)))
max(x1$value)+0.2
as.numeric(max(x1$value)+0.2)
is(x1$value)
x1$value <- as.numeric(ifelse(x1$value=='-Inf','0',x1$value))
is(x1$value)
p + geom_col(position="dodge") + scale_y_continuous(expand=c(0,0),limits=c(0,max(x1$value)+0.2))
p + geom_col(position="dodge") + scale_y_discrete(expand=c(0,0),limits=c(0,max(x1$value)+0.2))
p + geom_col(position="dodge") + scale_y_discrete(expand=c(0,0))
p + geom_col(stat='bin',position="dodge")
p + geom_bar(stat='summary',fun.y='mean',position="dodge")
x1 <- melt(x[1:9])
x1$variable <- gsub('_.','',x1$variable)
p <- ggplot(x1,aes(x=Gene,y=value,fill=variable))
p + geom_bar(stat='summary',fun.y='mean',position="dodge")
p + geom_bar(stat='summary',position="dodge")
p + geom_bar(stat='summary',position="dodge",fun='mean')
p <- ggplot(x1,aes(x=Gene,y=value,fill=variable)) +
geom_bar(stat='summary',position="dodge",fun='mean')
p
p + geom_errorbar()
ggplot(x1,aes(x=Gene,y=value,group=variable)) +
geom_boxplot(aes(color=variable),position=dodge,notch=TRUE) +
geom_point(aes(color=variable,position=variable))
ggplot(x1,aes(x=Gene,y=value,group=variable)) +
geom_boxplot(aes(color=variable),position='dodge',notch=TRUE) +
geom_point(aes(color=variable,position=variable))
ggplot(x1,aes(x=Gene,y=value)) +
geom_boxplot(aes(group=variable,color=variable),position='dodge',notch=TRUE) +
geom_point(aes(color=variable,position=variable))
ggplot(x1,aes(x=Gene,y=value)) +
geom_boxplot(aes(group=variable,color=variable),position='dodge',notch=TRUE,fill='none') +
geom_point(aes(color=variable,position=variable))
ggplot(x1,aes(x=Gene,y=value)) +
geom_boxplot(aes(group=variable,color=variable),position='dodge',notch=TRUE,fill='None') +
geom_point(aes(color=variable,position=variable))
ggplot(x1,aes(x=Gene,y=value)) +
geom_boxplot(aes(group=variable,color=variable),position='dodge',notch=TRUE,fill=NA) +
geom_point(aes(color=variable,position=variable))
ggplot(x1,aes(x=Gene,y=value,group=variable,color=variable)) +
geom_boxplot(,position='dodge',notch=TRUE,fill=NA) +
geom_point()
ggplot(x1,aes(x=Gene,y=value,group=variable,color=variable)) +
geom_boxplot(position='dodge',notch=TRUE,fill=NA) +
geom_point()
ggplot(x1,aes(x=Gene,y=value,color=variable)) +
geom_boxplot(position='dodge',notch=TRUE,fill=NA) +
geom_point()
ggplot(x1,aes(x=Gene,y=value,color=variable)) +
geom_boxplot(position='dodge',fill=NA) +
geom_point()
ggplot(x1,aes(x=Gene,y=value,color=variable)) +
geom_boxplot(position='dodge',fill=NA) +
geom_point(position='dodge')
ggplot(x1,aes(x=Gene,y=value)) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=45,hjust=0))
ggplot(x1,aes(x=Gene,y=value,fill=variable)) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=315,hjust=0))
head(x1)
x1$order <- 'NA'
x1$order <- ifelse(x1$variable='Kale','1',2)
x1$order <- ifelse(x1$variable='T01000','2',x1$order)
x1$order <- 'NA'
x1$order <- ifelse(x1$variable=='Kale',1,2)
x1$order <- ifelse(x1$variable=='T01000',3,x1$order)
x1
x1$order <- ifelse(x1$variable=='TO1000',3,x1$order)
ls
x1
ggplot(x1,aes(x=Gene,y=value,fill=reorder(variable,order))) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=315,hjust=0))
ggplot(x1,aes(x=Gene,y=value,fill=reorder(variable,order))) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=270,hjust=0.5,vjust=0)) +
y_scale_continuous(expand=c(0,0))
ggplot(x1,aes(x=Gene,y=value,fill=reorder(variable,order))) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=270,hjust=0.5,vjust=0)) +
scale_y_continuous(expand=c(0,0))
ggplot(x1,aes(x=Gene,y=value,fill=reorder(variable,order))) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=270,hjust=0,vjust=0)) +
scale_y_continuous(expand=c(0,0))
ggplot(x1,aes(x=Gene,y=value,fill=reorder(variable,order))) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=270,hjust=0.5,vjust=0)) +
scale_y_continuous(expand=c(0,0))
ggplot(x1,aes(x=Gene,y=value,fill=reorder(variable,order))) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=270,hjust=0,vjust=0.5)) +
scale_y_continuous(expand=c(0,0))
x1
goi2
merge(x1,goi2[1:2])
x1 <- melt(x[1:9])
x1 <- merge(x1,goi2[1:2])
x1$variable <- gsub('_.','',x1$variable)
x1$value <- log2(x1$value)
x1$value <- as.numeric(ifelse(x1$value=='-Inf','0',x1$value))
x1$order <- 'NA'
x1$order <- ifelse(x1$variable=='Kale',1,2)
x1$order <- ifelse(x1$variable=='TO1000',3,x1$order)
p <- ggplot(x1,aes(x=Gene,y=value,fill=reorder(variable,order))) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=270,hjust=0,vjust=0.5)) +
scale_y_continuous(expand=c(0,0))
p
head(x1)
length(unique(x1$Gene))
length(unique(x1$Name))
tail(x1)
x1 <- melt(x[1:9])
x1 <- merge(x1,goi2[1:2],by.x='Gene',y='ID')
x1$variable <- gsub('_.','',x1$variable)
x1$value <- log2(x1$value)
x1$value <- as.numeric(ifelse(x1$value=='-Inf','0',x1$value))
x1$order <- 'NA'
x1$order <- ifelse(x1$variable=='Kale',1,2)
x1$order <- ifelse(x1$variable=='TO1000',3,x1$order)
x1 <- melt(x[1:9])
x1 <- merge(x1,goi2[1:2],by.x='Gene',by.y='ID')
x1$variable <- gsub('_.','',x1$variable)
x1$value <- log2(x1$value)
x1$value <- as.numeric(ifelse(x1$value=='-Inf','0',x1$value))
x1$order <- 'NA'
x1$order <- ifelse(x1$variable=='Kale',1,2)
x1$order <- ifelse(x1$variable=='TO1000',3,x1$order)
head(x1)
tail(x1)
length(unique(x1$Gene))
length(unique(x1$Name))
ggplot(x1,aes(x=Gene,y=value,fill=reorder(variable,order))) +
geom_bar(stat='summary',position="dodge",fun='mean',sep=1) +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=270,hjust=0,vjust=0.5)) +
scale_y_continuous(expand=c(0,0))
ggplot(x1,aes(x=Gene,y=value,fill=reorder(variable,order),width=0.5)) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=270,hjust=0,vjust=0.5)) +
scale_y_continuous(expand=c(0,0))
ggplot(x1,aes(x=Gene,y=value,fill=reorder(variable,order),width=0.5)) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=270,hjust=0,vjust=0.25)) +
scale_y_continuous(expand=c(0,0))
ggplot(x1,aes(x=Gene,y=value,fill=reorder(variable,order),width=0.5)) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=270,hjust=0,vjust=0.75)) +
scale_y_continuous(expand=c(0,0))
ggplot(x1,aes(x=Gene,y=value,fill=reorder(variable,order),width=0.75)) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=270,hjust=0,vjust=0.5)) +
scale_y_continuous(expand=c(0,0))
ggplot(x1,aes(x=Gene,y=value,fill=reorder(variable,order),
width=0.75)) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=270,hjust=0,vjust=0.5)) +
scale_y_continuous(expand=c(0,0)) +
ylab("log2 Counts") +
scale_fill_manual("Morphotype")
ggplot(x1,aes(x=Gene,y=value,fill=reorder(variable,order),
width=0.75)) +
geom_bar(stat='summary',position="dodge",fun='mean') +
theme_bw() +
theme(axis.text=element_text(color='black'),
axis.line=element_line(color='black'),
axis.text.x=element_text(angle=270,hjust=0,vjust=0.5)) +
scale_y_continuous(expand=c(0,0)) +
ylab("log2 Counts") +
scale_fill_discrete("Morphotype")
save.image("~/Analysis/Boleracea-rnaseq/figures_tables/Analysis.RData")
