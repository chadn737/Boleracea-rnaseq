single_copy <- tmp[tmp$At_gene %in% tmp6,]
draw.triple.venn(area1=nrow(tmp7[tmp7$`-1`> 0,]),
area2=nrow(tmp7[tmp7$`1`> 0,]),
area3=nrow(tmp7[tmp7$`0`> 0,]),
n12=nrow(tmp7[tmp7$`-1`> 0 & tmp7$`1`> 0,]),
n23=nrow(tmp7[tmp7$`1`> 0 & tmp7$`0`> 0,]),
n13=nrow(tmp7[tmp7$`0`> 0 & tmp7$`-1`> 0,]),
n123=nrow(tmp7[tmp7$`-1`> 0 & tmp7$`1`> 0 & tmp7$`0`> 0,]),
category = c("Lower Expression", "Higher Expression", "No Difference"),
lty = "blank",
fill = c("skyblue", "pink1", "mediumorchid")
)
nrow(tmp5[tmp5$sum > 1 & tmp5$`1` > 0 & tmp5$`-1` > 0,])
tmp[tmp$At_gene=="AT1G01050" & tmp$subgenome=="LF",]$direction
for(i in tmp$At_gene){
tmp[tmp$At_gene==i,]
}
for(i in "Bo8g002920"){
if(i %in% syn$Bo_gene){
At_genes <- syn[syn$Bo_gene==i,]$At_gene
Bo_genes <- syn[syn$At_gene==At_genes,]$Bo_gene
#tmp <- synRes[synRes$id %in% Bo_genes,]
tmp <- matrix(nrow=0,ncol=0)
for(x in Bo_genes){
if(x %in% resfull$id){
tmp2 <- plotCounts(dds, x, intgroup = "condition", normalized = TRUE,transform = FALSE, returnData = TRUE)
tmp2$gene <- x
tmp <- rbind(tmp,tmp2)
}
}
tmp <- merge(tmp,syn,by.x="gene",by.y="Bo_gene")
}
else{
print("Not in syntenic genes")
}
}
pSyn$number=c(length(syn$Bo_gene %in% all_genes$gene),
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",]),
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="cabbage",]),
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]),
(nrow(all_genes)-length(syn$Bo_gene %in% all_genes$gene)),
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="TO1000",]),
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="cabbage",]),
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]))
test <- data.frame(row.names=c("Genome","KvT DEG","KvT Non-DEG","KvC DEG","KvC Non-DEG","CvT DEG","CvT Non-DEG"),
syntenic=c(24521,3519,21002,3469,21052,3514,21007),nonsyntenic=c(34704,4596,30108,3875,30829,3915,30789))
fisher.test(as.matrix(test[c(2:3),]))
fisher.test(as.matrix(test[c(4:5),]))
fisher.test(as.matrix(test[c(6:7),]))
fisher.test(as.matrix(test[c(2:3),c(2,1)]))
fisher.test(as.matrix(test[c(4:5),c(2,1)]))
fisher.test(as.matrix(test[c(6:7),c(2,1)]))
test2 <- data.frame(
row.names=c("Genome","KvT DEG","KvT Non-DEG","KvC DEG","KvC Non-DEG","CvT DEG","CvT Non-DEG"),
LF=c(10763,1463,9300,1472,9291,1502,9261),
nonLF=c(48462,6652,41810,5872,2590,5526,42936),
MF1=c(7420,1120,6300,1121,6299,1099,6321),
nonMF1=c(51805,6995,44810,6223,45582,5929,45876),
MF2=c(6338,936,5402,876,5462,913,5425),
nonMF2=c(52887,7179,45708,6468,46419,6115,46772))
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))
fisher.test(as.matrix(test2[c(4:5),c(1,2)]))
fisher.test(as.matrix(test2[c(6:7),c(1,2)]))
fisher.test(as.matrix(test2[c(2:3),c(2,1)]))
fisher.test(as.matrix(test2[c(4:5),c(2,1)]))
fisher.test(as.matrix(test2[c(6:7),c(2,1)]))
fisher.test(as.matrix(test2[c(2:3),c(3,4)]))
fisher.test(as.matrix(test2[c(4:5),c(3,4)]))
fisher.test(as.matrix(test2[c(6:7),c(3,4)]))
fisher.test(as.matrix(test2[c(2:3),c(4,3)]))
fisher.test(as.matrix(test2[c(4:5),c(4,3)]))
fisher.test(as.matrix(test2[c(6:7),c(4,3)]))
fisher.test(as.matrix(test2[c(2:3),c(5,6)]))
fisher.test(as.matrix(test2[c(4:5),c(5,6)]))
fisher.test(as.matrix(test2[c(6:7),c(5,6)]))
fisher.test(as.matrix(test2[c(2:3),c(6,5)]))
fisher.test(as.matrix(test2[c(4:5),c(6,5)]))
fisher.test(as.matrix(test2[c(6:7),c(6,5)]))
ttest
test2
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))
fisher.test(as.matrix(test2[c(4:5),c(1,2)]))
fisher.test(as.matrix(test2[c(6:7),c(1,2)]))
fisher.test(as.matrix(test2[c(2:3),c(2,1)]))
fisher.test(as.matrix(test2[c(4:5),c(2,1)]))
fisher.test(as.matrix(test2[c(6:7),c(2,1)]))
fisher.test(as.matrix(test2[c(2:3),c(3,4)]))
fisher.test(as.matrix(test2[c(4:5),c(3,4)]))
fisher.test(as.matrix(test2[c(6:7),c(3,4)]))
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))$p.value
ttest
test2
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))$odds
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))$odds.ratio
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))$or
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))$OR
?fisher.test()
test3 <- data.frame(
row.names=c("KvT","KvC","CvT"),
LF_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))$p.value
fisher.test(as.matrix(test2[c(4:5),c(1,2)]))$p.value
fisher.test(as.matrix(test2[c(6:7),c(1,2)]))$p.value),
LF_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))$estimate
fisher.test(as.matrix(test2[c(4:5),c(1,2)]))$estimate
fisher.test(as.matrix(test2[c(6:7),c(1,2)]))$estimate),
MF1_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(3,4)]))$p.value
fisher.test(as.matrix(test2[c(4:5),c(3,4)]))$p.value
fisher.test(as.matrix(test2[c(6:7),c(3,4)]))$p.value),
MF1_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(3,4)]))$estimate
fisher.test(as.matrix(test2[c(4:5),c(3,4)]))$estimate
fisher.test(as.matrix(test2[c(6:7),c(3,4)]))$estimate),
MF2_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(5,6)]))$p.value
fisher.test(as.matrix(test2[c(4:5),c(5,6)]))$p.value
fisher.test(as.matrix(test2[c(6:7),c(5,6)]))$p.value),
MF2_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(5,6)]))$estimate
fisher.test(as.matrix(test2[c(4:5),c(5,6)]))$estimate
fisher.test(as.matrix(test2[c(6:7),c(5,6)]))$estimate)
)
test3 <- data.frame(
row.names=c("KvT","KvC","CvT"),
LF_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))$p.value,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]))$p.value,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]))$p.value),
LF_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))$estimate,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]))$estimate,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]))$estimate),
MF1_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(3,4)]))$p.value,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]))$p.value,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]))$p.value),
MF1_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(3,4)]))$estimate,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]))$estimate,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]))$estimate),
MF2_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(5,6)]))$p.value,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]))$p.value,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]))$p.value),
MF2_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(5,6)]))$estimate,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]))$estimate,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]))$estimate)
)
test3
fisher.test(as.matrix(test2[c(4:5),c(1,2)]))
test2
9300+41810+1463+6652
59225-(1472+9291+2590)
59225-(1472+9291+5872)
test2 <- data.frame(
row.names=c("Genome","KvT DEG","KvT Non-DEG","KvC DEG","KvC Non-DEG","CvT DEG","CvT Non-DEG"),
LF=c(10763,1463,9300,1472,9291,1502,9261),
nonLF=c(48462,6652,41810,5872,42590,5526,42936),
MF1=c(7420,1120,6300,1121,6299,1099,6321),
nonMF1=c(51805,6995,44810,6223,45582,5929,45876),
MF2=c(6338,936,5402,876,5462,913,5425),
nonMF2=c(52887,7179,45708,6468,46419,6115,46772))
test2
test3 <- data.frame(
row.names=c("KvT","KvC","CvT"),
LF_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))$p.value,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]))$p.value,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]))$p.value),
LF_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))$estimate,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]))$estimate,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]))$estimate),
MF1_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(3,4)]))$p.value,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]))$p.value,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]))$p.value),
MF1_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(3,4)]))$estimate,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]))$estimate,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]))$estimate),
MF2_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(5,6)]))$p.value,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]))$p.value,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]))$p.value),
MF2_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(5,6)]))$estimate,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]))$estimate,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]))$estimate)
)
test3
p.adjust(test3$LF_pvaluemethod="BH")
p.adjust(test3$LF_pvalue,method="BH")
p.adjust(test3$LF_pvalue,method="Bonferroni")
p.adjust(test3$LF_pvalue,method="bonferroni")
p.adjust(c(test3$LF_pvalue,test3$MF1_pvalue,test3$MF2_pvalue),method="bonferroni")
8.632223e-02
1.000000e+00 9.833978e-05 3.196344e-12 2.075101e-03 1.323777e-12 3.280598e-15 8.632223e-02 2.972971e-03 9.468896e-10
#Syntenic genes
#
syn <- read.table("../misc/Bo-At-syntelogs.tsv",header=T,sep="\t")
synRes <- merge(resfull,syn,by.x="id",by.y="Bo_gene")
synSig <- merge(sig,syn,by.x="id",by.y="Bo_gene")
#Syntenic vs Non-Syntenic
pSyn=data.frame(
row.names=c("Genome: Percent Syntenic",
"KvT DEGs: Percent Syntenic",
"KvC DEGs: Percent Syntenic",
"CvT DEGs: Percent Syntenic",
"Genome: Percent Non-Syntenic",
"KvT DEGs: Percent Non-Syntenic",
"KvC DEGs: Percent Non-Syntenic",
"CvT DEGs: Percent Non-Syntenic"),
percent=c(length(syn$Bo_gene %in% all_genes$gene)/nrow(all_genes),
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]),
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="cabbage",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]),
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]),
(nrow(all_genes)-length(syn$Bo_gene %in% all_genes$gene))/nrow(all_genes),
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]),
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="cabbage",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]),
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])),
order=c(1,2,3,4,5,6,7,8))
#Make Plot
ggsave("Syntenic_genes.pdf",
ggplot(pSyn,aes(x=reorder(row.names(pSyn),order),y=percent,fill=reorder(row.names(pSyn),order))) +
geom_bar(stat="identity") +
theme(panel.background=element_blank(),
axis.line=element_line(color="black"),
axis.text=element_text(color="black"),
axis.title=element_text(color="black",face="bold"),
axis.text.x=element_text(angle=315,hjust=0),
legend.position="none") +
scale_y_continuous(expand=c(0,0),labels=percent) +
scale_fill_manual(values=c("tomato2",
"dodgerblue3",
"palegreen4",
"khaki3",
"tomato2",
"dodgerblue3",
"palegreen4",
"khaki3")) +
ylab("Percentage of Genes") +
xlab(""))
library(scales)
pSyn=data.frame(
row.names=c("Genome: Percent Syntenic",
"KvT DEGs: Percent Syntenic",
"KvC DEGs: Percent Syntenic",
"CvT DEGs: Percent Syntenic",
"Genome: Percent Non-Syntenic",
"KvT DEGs: Percent Non-Syntenic",
"KvC DEGs: Percent Non-Syntenic",
"CvT DEGs: Percent Non-Syntenic"),
percent=c(length(syn$Bo_gene %in% all_genes$gene)/nrow(all_genes),
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]),
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="kale" & sig$sampleB=="cabbage",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]),
nrow(sig[sig$id %in% syn$Bo_gene & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]),
(nrow(all_genes)-length(syn$Bo_gene %in% all_genes$gene))/nrow(all_genes),
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]),
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="kale" & sig$sampleB=="cabbage",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]),
nrow(sig[!(sig$id %in% syn$Bo_gene) & sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])/nrow(sig[sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])),
order=c(1,2,3,4,5,6,7,8))
#Make Plot
ggsave("Syntenic_genes.pdf",
ggplot(pSyn,aes(x=reorder(row.names(pSyn),order),y=percent,fill=reorder(row.names(pSyn),order))) +
geom_bar(stat="identity") +
theme(panel.background=element_blank(),
axis.line=element_line(color="black"),
axis.text=element_text(color="black"),
axis.title=element_text(color="black",face="bold"),
axis.text.x=element_text(angle=315,hjust=0),
legend.position="none") +
scale_y_continuous(expand=c(0,0),labels=percent) +
scale_fill_manual(values=c("tomato2",
"dodgerblue3",
"palegreen4",
"khaki3",
"tomato2",
"dodgerblue3",
"palegreen4",
"khaki3")) +
ylab("Percentage of Genes") +
xlab(""))
#KvT subgenome
KvTsub=data.frame(
row.names=c("Genome: Percent LF",
"DEGs: Percent LF",
"Genome: Percent MF1",
"DEGs: Percent MF1",
"Genome: Percent MF2",
"DEGs: Percent MF2"),
percent=c(nrow(syn[syn$subgenome=="LF",])/nrow(all_genes),
nrow(synSig[synSig$sampleA=="kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]),
nrow(syn[syn$subgenome=="MF1",])/nrow(all_genes),
nrow(synSig[synSig$sampleA=="kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",]),
nrow(syn[syn$subgenome=="MF2",])/nrow(all_genes),
nrow(synSig[synSig$sampleA=="kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="TO1000",])),
order=c(1,2,3,4,5,6))
#Make Plot
ggsave("KvT_subgenome.pdf",
ggplot(KvTsub,aes(x=reorder(row.names(KvTsub),order),y=percent,fill=reorder(row.names(KvTsub),order))) +
geom_bar(stat="identity") +
theme(panel.background=element_blank(),
axis.line=element_line(color="black"),
axis.text=element_text(color="black"),
axis.title=element_text(color="black",face="bold"),
axis.text.x=element_text(angle=315,hjust=0),
legend.position="none") +
scale_y_continuous(expand=c(0,0),labels=percent) +
scale_fill_manual(values=c("tomato2",
"tomato2",
"dodgerblue3",
"dodgerblue3",
"black",
"black")) +
ylab("Percentage of Genes") +
xlab(""))
#Log2FC distribution
tmp <- synRes[synRes$sampleA=="kale" & synRes$sampleB=="TO1000",]
tmp$direction <- ifelse(tmp$log2FC > 0 & tmp$padj < 0.05,1,ifelse(tmp$log2FC < 0 & tmp$padj < 0.05,-1,0))
tmp2 <- tmp[tmp$direction != 0,]$At_gene
tmp2 <- as.vector(unique(tmp[tmp$direction != 0,]$At_gene))
tmp3 <- tmp[tmp$At_gene %in% tmp2,]
ggsave("KvT_subgenome_log2FC.pdf",
ggplot(tmp3[tmp3$padj<=0.05,],aes(x=log2FC,color=subgenome)) +
geom_density(size=1) +
theme(panel.background=element_blank(),
axis.line=element_line(color="black"),
axis.text=element_text(color="black"),
axis.title=element_text(color="black",face="bold"),
axis.text.x=element_text(),
legend.position="right") +
scale_y_continuous(expand=c(0,0)) +
scale_color_manual(values=c("dodgerblue","tomato2","black")) +
ylab("Density") +
xlab("Log2 Fold Change"))
#Homoeolog direction
tmp4 <- tmp[,c(10,9,11)]
tmp5 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$subgenome))
tmp5$sum <- rowSums(tmp5)
tmp6 <- as.vector(row.names(tmp5[tmp5$sum != tmp5$LF & tmp5$sum != tmp5$MF1 & tmp5$sum != tmp5$MF2,]))
tmp5 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$direction))
tmp5 <- tmp5[row.names(tmp5) %in% as.vector(unique(tmp$At_gene)),]
tmp5$sum <- rowSums(tmp5)
tmp7 <- tmp5[tmp5$sum > 1 & row.names(tmp5) %in% tmp6,]
pdf("KvT_homoeologs_VennDiagram.pdf",width=6,height=6,paper='special')
draw.triple.venn(area1=nrow(tmp7[tmp7$`-1`> 0,]),
area2=nrow(tmp7[tmp7$`1`> 0,]),
area3=nrow(tmp7[tmp7$`0`> 0,]),
n12=nrow(tmp7[tmp7$`-1`> 0 & tmp7$`1`> 0,]),
n23=nrow(tmp7[tmp7$`1`> 0 & tmp7$`0`> 0,]),
n13=nrow(tmp7[tmp7$`0`> 0 & tmp7$`-1`> 0,]),
n123=nrow(tmp7[tmp7$`-1`> 0 & tmp7$`1`> 0 & tmp7$`0`> 0,]),
category = c("Lower Expression", "Higher Expression", "No Difference"),
lty = "blank",
fill = c("skyblue", "pink1", "mediumorchid"))
dev.off()
#KvC subgenome
KvCsub=data.frame(
row.names=c("Genome: Percent LF",
"DEGs: Percent LF",
"Genome: Percent MF1",
"DEGs: Percent MF1",
"Genome: Percent MF2",
"DEGs: Percent MF2"),
percent=c(nrow(syn[syn$subgenome=="LF",])/nrow(all_genes),
nrow(synSig[synSig$sampleA=="kale" & synSig$sampleB=="cabbage" & synSig$subgenome=="LF",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]),
nrow(syn[syn$subgenome=="MF1",])/nrow(all_genes),
nrow(synSig[synSig$sampleA=="kale" & synSig$sampleB=="cabbage" & synSig$subgenome=="MF1",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",]),
nrow(syn[syn$subgenome=="MF2",])/nrow(all_genes),
nrow(synSig[synSig$sampleA=="kale" & synSig$sampleB=="cabbage" & synSig$subgenome=="MF2",])/nrow(sig[sig$sampleA=="kale" & sig$sampleB=="cabbage",])),
order=c(1,2,3,4,5,6))
#Make Plot
ggsave("KvC_subgenome.pdf",
ggplot(KvCsub,aes(x=reorder(row.names(KvCsub),order),y=percent,fill=reorder(row.names(KvCsub),order))) +
geom_bar(stat="identity") +
theme(panel.background=element_blank(),
axis.line=element_line(color="black"),
axis.text=element_text(color="black"),
axis.title=element_text(color="black",face="bold"),
axis.text.x=element_text(angle=315,hjust=0),
legend.position="none") +
scale_y_continuous(expand=c(0,0),labels=percent) +
scale_fill_manual(values=c("tomato2",
"tomato2",
"dodgerblue3",
"dodgerblue3",
"black",
"black")) +
ylab("Percentage of Genes") +
xlab(""))
#Log2FC distribution
tmp <- synRes[synRes$sampleA=="kale" & synRes$sampleB=="cabbage",]
tmp$direction <- ifelse(tmp$log2FC > 0 & tmp$padj < 0.05,1,ifelse(tmp$log2FC < 0 & tmp$padj < 0.05,-1,0))
tmp2 <- tmp[tmp$direction != 0,]$At_gene
tmp2 <- as.vector(unique(tmp[tmp$direction != 0,]$At_gene))
tmp3 <- tmp[tmp$At_gene %in% tmp2,]
ggsave("KvC_subgenome_log2FC.pdf",
ggplot(tmp3[tmp3$padj<=0.05,],aes(x=log2FC,color=subgenome)) +
geom_density(size=1) +
theme(panel.background=element_blank(),
axis.line=element_line(color="black"),
axis.text=element_text(color="black"),
axis.title=element_text(color="black",face="bold"),
axis.text.x=element_text(),
legend.position="right") +
scale_y_continuous(expand=c(0,0)) +
scale_color_manual(values=c("dodgerblue","tomato2","black")) +
ylab("Density") +
xlab("Log2 Fold Change"))
#Homoeolog direction
tmp4 <- tmp[,c(10,9,11)]
tmp5 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$subgenome))
tmp5$sum <- rowSums(tmp5)
tmp6 <- as.vector(row.names(tmp5[tmp5$sum != tmp5$LF & tmp5$sum != tmp5$MF1 & tmp5$sum != tmp5$MF2,]))
tmp5 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$direction))
tmp5 <- tmp5[row.names(tmp5) %in% as.vector(unique(tmp$At_gene)),]
tmp5$sum <- rowSums(tmp5)
tmp7 <- tmp5[tmp5$sum > 1 & row.names(tmp5) %in% tmp6,]
pdf("KvC_homoeologs_VennDiagram.pdf",width=6,height=6,paper='special')
draw.triple.venn(area1=nrow(tmp7[tmp7$`-1`> 0,]),
area2=nrow(tmp7[tmp7$`1`> 0,]),
area3=nrow(tmp7[tmp7$`0`> 0,]),
n12=nrow(tmp7[tmp7$`-1`> 0 & tmp7$`1`> 0,]),
n23=nrow(tmp7[tmp7$`1`> 0 & tmp7$`0`> 0,]),
n13=nrow(tmp7[tmp7$`0`> 0 & tmp7$`-1`> 0,]),
n123=nrow(tmp7[tmp7$`-1`> 0 & tmp7$`1`> 0 & tmp7$`0`> 0,]),
category = c("Lower Expression", "Higher Expression", "No Difference"),
lty = "blank",
fill = c("skyblue", "pink1", "mediumorchid"))
dev.off()
#CvT subgenome
CvTsub=data.frame(
row.names=c("Genome: Percent LF",
"DEGs: Percent LF",
"Genome: Percent MF1",
"DEGs: Percent MF1",
"Genome: Percent MF2",
"DEGs: Percent MF2"),
percent=c(nrow(syn[syn$subgenome=="LF",])/nrow(all_genes),
nrow(synSig[synSig$sampleA=="cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",])/nrow(sig[sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]),
nrow(syn[syn$subgenome=="MF1",])/nrow(all_genes),
nrow(synSig[synSig$sampleA=="cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",])/nrow(sig[sig$sampleA=="cabbage" & sig$sampleB=="TO1000",]),
nrow(syn[syn$subgenome=="MF2",])/nrow(all_genes),
nrow(synSig[synSig$sampleA=="cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",])/nrow(sig[sig$sampleA=="cabbage" & sig$sampleB=="TO1000",])),
order=c(1,2,3,4,5,6))
#Make Plot
ggsave("CvT_subgenome.pdf",
ggplot(CvTsub,aes(x=reorder(row.names(CvTsub),order),y=percent,fill=reorder(row.names(CvTsub),order))) +
geom_bar(stat="identity") +
theme(panel.background=element_blank(),
axis.line=element_line(color="black"),
axis.text=element_text(color="black"),
axis.title=element_text(color="black",face="bold"),
axis.text.x=element_text(angle=315,hjust=0),
legend.position="none") +
scale_y_continuous(expand=c(0,0),labels=percent) +
scale_fill_manual(values=c("tomato2",
"tomato2",
"dodgerblue3",
"dodgerblue3",
"black",
"black")) +
ylab("Percentage of Genes") +
xlab(""))
#Log2FC distribution
tmp <- synRes[synRes$sampleA=="cabbage" & synRes$sampleB=="TO1000",]
tmp$direction <- ifelse(tmp$log2FC > 0 & tmp$padj < 0.05,1,ifelse(tmp$log2FC < 0 & tmp$padj < 0.05,-1,0))
tmp2 <- tmp[tmp$direction != 0,]$At_gene
tmp2 <- as.vector(unique(tmp[tmp$direction != 0,]$At_gene))
tmp3 <- tmp[tmp$At_gene %in% tmp2,]
ggsave("CvT_subgenome_log2FC.pdf",
ggplot(tmp3[tmp3$padj<=0.05,],aes(x=log2FC,color=subgenome)) +
geom_density(size=1) +
theme(panel.background=element_blank(),
axis.line=element_line(color="black"),
axis.text=element_text(color="black"),
axis.title=element_text(color="black",face="bold"),
axis.text.x=element_text(),
legend.position="right") +
scale_y_continuous(expand=c(0,0)) +
scale_color_manual(values=c("dodgerblue","tomato2","black")) +
ylab("Density") +
xlab("Log2 Fold Change"))
#Homoeolog direction
tmp4 <- tmp[,c(10,9,11)]
tmp5 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$subgenome))
tmp5$sum <- rowSums(tmp5)
tmp6 <- as.vector(row.names(tmp5[tmp5$sum != tmp5$LF & tmp5$sum != tmp5$MF1 & tmp5$sum != tmp5$MF2,]))
tmp5 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$direction))
tmp5 <- tmp5[row.names(tmp5) %in% as.vector(unique(tmp$At_gene)),]
tmp5$sum <- rowSums(tmp5)
tmp7 <- tmp5[tmp5$sum > 1 & row.names(tmp5) %in% tmp6,]
pdf("CvT_homoeologs_VennDiagram.pdf",width=6,height=6,paper='special')
draw.triple.venn(area1=nrow(tmp7[tmp7$`-1`> 0,]),
area2=nrow(tmp7[tmp7$`1`> 0,]),
area3=nrow(tmp7[tmp7$`0`> 0,]),
n12=nrow(tmp7[tmp7$`-1`> 0 & tmp7$`1`> 0,]),
n23=nrow(tmp7[tmp7$`1`> 0 & tmp7$`0`> 0,]),
n13=nrow(tmp7[tmp7$`0`> 0 & tmp7$`-1`> 0,]),
n123=nrow(tmp7[tmp7$`-1`> 0 & tmp7$`1`> 0 & tmp7$`0`> 0,]),
category = c("Lower Expression", "Higher Expression", "No Difference"),
lty = "blank",
fill = c("skyblue", "pink1", "mediumorchid"))
dev.off()
test3
7.215969e-01
1.092664e-05
print(1.092664e-05)
